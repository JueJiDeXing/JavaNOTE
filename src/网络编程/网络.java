package 网络编程;

public class 网络 {
    //网络编程:在网络通信协议下,不同计算机运行的程序,进行的数据传输

    //软件架构:
    // CS:Client/Server,客户端/服务器
    //    在用户本地需要下载客户端程序,在远端有一个服务器端程序
    //    需要开发客户端和服务端,更新麻烦
    // BS:Browser/Server,浏览器/服务器
    //    只需要一个浏览器,用户通过不同的网址访问不同的服务器
    //    只需要开发服务端,不需要下载,但是应用过大时用户体验受影响

    //网络编程三要素:IP,端口,协议
    //IP:Internet Protocol,互联网协议地址,设备在网络中的地址,是唯一的
     /* IPv4:互联网通信协议第四版,采用32位地址长度,分为4组,点分十进制0~255(地址不够用)
     IPv4地址分类
     192.168开头的为私有地址,由公网IP分配,连接不同的局域网分配不同的IP
     127.0.0.1回送地址,本地回环地址,本机IP,localhost,永远只会寻找当前所在本机
     ipconfig:查看本机Ip  ping+ip:检测网络连接是否畅通

     IPv6:第六版,采用128位地址长度,分为8组,冒分十六进制
        省略每组前面的0 2001:0DB8:0000:0023:0008:0800:200C:417A ->2001:DB8:0:23:8:800:200C:417A
        0位压缩表示法   FF01:0:0:0:0:0:0:1101 -> FF01::1101
     */
    // 端口:程序在设备中的唯一标识,一个端口号只能被一个程序使用
    //由两个字节表示的整数0~65535,其中0~1023之间的端口号用于知名的网络服务或应用,个人使用的端口号在1024以上

    // 协议:数据传输规则(UDP,TCP,http,https,ftp)
    // OSI参考模型(由于太理想化,未推广)
    // TCP/IP参考模型:国际标准

    //UDP协议:User Datagram Protocol用户数据报协议
    //  面向无连接通信协议(不检查网络,直接发送数据),速度快,有大小限制,一次最多发送64K,数据不安全,易丢失
    //TCP协议:Transmission Control Protocol传输控制协议
    //  面向连接的通信协议(确保网络连接才发送数据),速度慢,没有大小限制,数据安全

    /*参考模型
    ┌─────────────┬────────────────┬─────────────────┬──────────────────┐
    │ OSI参考模型丶 │  TCP/IP参考模型丶│    对应协议丶     │   面向丶丶丶       │
    ├─────────────┼────────────────┼─────────────────┼──────────────────┤
    │    应用层丶丶 │                │     Http        │  应用程序需要关注丶丶│
    ├─────────────┤                │     Ftp         │例如:浏览器,邮箱丶丶丶│
    │    表示层丶丶 │     应用层丶丶   │     TeInet      │程序员在这一层开发丶  │
    ├─────────────│                │     DNS         │                  │
    │    会话层丶丶 │                │                 │                  │
    ├─────────────┼────────────────┼─────────────────┼──────────────────┤
    │    传输层丶丶 │     传输层丶丶   │  TCP  UDP       │选择传输使用的协议丶  │
    ├─────────────┼────────────────┼─────────────────┼──────────────────┤
    │    网络层丶丶 │     网络层丶丶   │ IP  ICMP  ARP   │封装IP等信息        │
    ├─────────────┼────────────────┼─────────────────┼──────────────────┤
    │  数据链路层   │                │   硬件设备丶      │  转换为二进制丶丶丶丶│
    ├─────────────┤    物理链路层    │   0101001...    │  利用物理设备传输丶丶│
    │    物理层丶丶 │                │                 │                  │
    └─────────────┴────────────────┴─────────────────┴──────────────────┘
     */


}
